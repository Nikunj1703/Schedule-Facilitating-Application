--DB NAME: sfsystem
--username: sfadmin
--password: sfadmin

create table USERS
(
	USER_ID INTEGER CONSTRAINT user_pk primary key GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
	ULID VARCHAR(32),
	PASSWORD VARCHAR(32),
	ISADMIN INTEGER,
	CREATED_TS TIMESTAMP,
	LAST_UPDT_TS TIMESTAMP
);

create table REVIEW_COMMENT
(
	COMMENT_ID INTEGER CONSTRAINT review_comment_pk primary key GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
	ULID VARCHAR(32),
	ALL_SCH_ID INTEGER,
	COMMENT_TEXT VARCHAR(3000),
	CREATED_TS TIMESTAMP,
	LAST_UPDT_TS TIMESTAMP	
);

create table ALL_SCHEDULE
(
	ALL_SCH_ID INTEGER CONSTRAINT all_schedule_pk primary key GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
	SCHEDULE_NAME VARCHAR(100),
	DESCRIPTION VARCHAR(255),
	CREATED_TS TIMESTAMP,
	LAST_UPDT_TS TIMESTAMP
);

create table TO_DO
(
	TO_DO_ID INTEGER CONSTRAINT to_do_pk primary key GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
	ULID VARCHAR(32),
	ALL_SCH_ID INTEGER,
	STATUS INTEGER,
	CREATED_TS TIMESTAMP,
	LAST_UPDT_TS TIMESTAMP
 );

create table COURSE_SECTION
(
	SECTION_ID INTEGER CONSTRAINT section_pk primary key GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
	COURSE_ID INTEGER,
	ALL_SCH_ID INTEGER,
	SECTION_NUMBER VARCHAR(32),
	CREATED_TS TIMESTAMP,
	LAST_UPDT_TS TIMESTAMP
);

create table COURSE_PREFERENCE
(
	COURSE_PREFERENCE_ID INTEGER CONSTRAINT course_pref_pk primary key GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
	PROF_ID INTEGER,
	COURSE_ID INTEGER,
	LAB_NEEDED INTEGER,
	COMMENTS VARCHAR(3000),
	CREATED_TS TIMESTAMP,
	LAST_UPDT_TS TIMESTAMP
);

create table DAY_PREFERENCE
(
	DAY_PREFERENCE_ID INTEGER CONSTRAINT day_pref_pk primary key GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
	PROF_ID INTEGER,
	DAYS VARCHAR(100),
	IS_EVENING INTEGER,
	CREATED_TS TIMESTAMP,
	LAST_UPDT_TS TIMESTAMP
);

CREATE TABLE PROFESSOR
(
        PROF_ID INTEGER CONSTRAINT professor_pk primary key GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
        PROF_NAME varchar(100),
        ULID varchar(100),
        EMPLOYMENT_STATUS INTEGER,
        TEACHING_STATUS INTEGER,
        CREATED_TS TIMESTAMP ,
        LAST_UPDT_TS TIMESTAMP 
);

CREATE TABLE ROOM
(
        ROOM_ID INTEGER CONSTRAINT room_pk primary key GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
        ROOM_NAME varchar(100),
        IS_LAB INTEGER,
        IS_AVAILABLE INTEGER,
        CREATED_TS TIMESTAMP ,
        LAST_UPDT_TS TIMESTAMP 
);

CREATE TABLE COURSE
(
        COURSE_ID INTEGER CONSTRAINT course_pk primary key GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
        COURSE_CODE varchar(100),
        COURSE_NAME varchar(100),
        CREATED_TS TIMESTAMP ,
        LAST_UPDT_TS TIMESTAMP 
);

CREATE TABLE SCHEDULE
(
        SCHEDULE_ID INTEGER CONSTRAINT schedule_pk primary key GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
        ALL_SCH_ID INTEGER,
        SECTION_ID INTEGER,
        PROF_ID INTEGER,
        ROOM_ID INTEGER,
        DAYS varchar(100),
        CLASS_TIME varchar(100),
        CREATED_TS TIMESTAMP ,
        LAST_UPDT_TS TIMESTAMP 
);


INSERT INTO USERS (ULID,PASSWORD,ISADMIN,CREATED_TS,LAST_UPDT_TS) VALUES ('admin','admin',1,CURRENT TIMESTAMP,CURRENT TIMESTAMP);
INSERT INTO USERS (ULID,PASSWORD,ISADMIN,CREATED_TS,LAST_UPDT_TS) VALUES ('faculty','faculty',0,CURRENT TIMESTAMP,CURRENT TIMESTAMP);
SELECT COUNT(1) FROM USERS WHERE ULID = 'admin'
SELECT * FROM USERS;

--POPULATE ROOM TABLE
INSERT INTO SFADMIN.ROOM (ROOM_NAME, IS_LAB, IS_AVAILABLE, CREATED_TS, LAST_UPDT_TS) VALUES ('CVA 151', 0, 1, CURRENT TIMESTAMP, CURRENT TIMESTAMP);
INSERT INTO SFADMIN.ROOM (ROOM_NAME, IS_LAB, IS_AVAILABLE, CREATED_TS, LAST_UPDT_TS) VALUES ('OU 132', 1, 1, CURRENT TIMESTAMP, CURRENT TIMESTAMP);
INSERT INTO SFADMIN.ROOM (ROOM_NAME, IS_LAB, IS_AVAILABLE, CREATED_TS, LAST_UPDT_TS) VALUES ('OU 133', 1, 1, CURRENT TIMESTAMP, CURRENT TIMESTAMP);
INSERT INTO SFADMIN.ROOM (ROOM_NAME, IS_LAB, IS_AVAILABLE, CREATED_TS, LAST_UPDT_TS) VALUES ('OU 213D', 1, 1, CURRENT TIMESTAMP, CURRENT TIMESTAMP);
INSERT INTO SFADMIN.ROOM (ROOM_NAME, IS_LAB, IS_AVAILABLE, CREATED_TS, LAST_UPDT_TS) VALUES ('OU 213E', 1, 1, CURRENT TIMESTAMP, CURRENT TIMESTAMP);
INSERT INTO SFADMIN.ROOM (ROOM_NAME, IS_LAB, IS_AVAILABLE, CREATED_TS, LAST_UPDT_TS) VALUES ('STV 101', 0, 1, CURRENT TIMESTAMP, CURRENT TIMESTAMP);
INSERT INTO SFADMIN.ROOM (ROOM_NAME, IS_LAB, IS_AVAILABLE, CREATED_TS, LAST_UPDT_TS) VALUES ('STV 104', 0, 1, CURRENT TIMESTAMP, CURRENT TIMESTAMP);
INSERT INTO SFADMIN.ROOM (ROOM_NAME, IS_LAB, IS_AVAILABLE, CREATED_TS, LAST_UPDT_TS) VALUES ('STV 105', 0, 1, CURRENT TIMESTAMP, CURRENT TIMESTAMP);
INSERT INTO SFADMIN.ROOM (ROOM_NAME, IS_LAB, IS_AVAILABLE, CREATED_TS, LAST_UPDT_TS) VALUES ('STV 108', 0, 1, CURRENT TIMESTAMP, CURRENT TIMESTAMP);
INSERT INTO SFADMIN.ROOM (ROOM_NAME, IS_LAB, IS_AVAILABLE, CREATED_TS, LAST_UPDT_TS) VALUES ('STV 139A', 0, 1, CURRENT TIMESTAMP, CURRENT TIMESTAMP);
INSERT INTO SFADMIN.ROOM (ROOM_NAME, IS_LAB, IS_AVAILABLE, CREATED_TS, LAST_UPDT_TS) VALUES ('WIH 123', 0, 1, CURRENT TIMESTAMP, CURRENT TIMESTAMP);


-- POPULATING COURSE TABLE
INSERT INTO SFADMIN.COURSE (COURSE_CODE, COURSE_NAME, CREATED_TS, LAST_UPDT_TS) VALUES ('IT 115','Reasoning about Complex Systems',CURRENT TIMESTAMP, CURRENT TIMESTAMP);
INSERT INTO SFADMIN.COURSE (COURSE_CODE, COURSE_NAME, CREATED_TS, LAST_UPDT_TS) VALUES ('IT 140','Interacting in a Digital World ',CURRENT TIMESTAMP, CURRENT TIMESTAMP);
INSERT INTO SFADMIN.COURSE (COURSE_CODE, COURSE_NAME, CREATED_TS, LAST_UPDT_TS) VALUES ('IT 150','Using Microcomputer Productivity Tools ',CURRENT TIMESTAMP, CURRENT TIMESTAMP);
INSERT INTO SFADMIN.COURSE (COURSE_CODE, COURSE_NAME, CREATED_TS, LAST_UPDT_TS) VALUES ('IT 155.02','SOME PRE-REQ',CURRENT TIMESTAMP, CURRENT TIMESTAMP);
INSERT INTO SFADMIN.COURSE (COURSE_CODE, COURSE_NAME, CREATED_TS, LAST_UPDT_TS) VALUES ('IT 154','SOME PRE-REQ',CURRENT TIMESTAMP, CURRENT TIMESTAMP);

-- POPULATING PROFESSOR TABLE
INSERT INTO PROFESSOR(PROF_NAME, ULID, EMPLOYMENT_STATUS, TEACHING_STATUS,CREATED_TS,LAST_UPDT_TS)
VALUES ('Lim, Billy','bllim',1,1,CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);

INSERT INTO PROFESSOR(PROF_NAME, ULID, EMPLOYMENT_STATUS, TEACHING_STATUS,CREATED_TS,LAST_UPDT_TS)
VALUES ('Jia, Ronnie','rjia',0,0,CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);

INSERT INTO PROFESSOR(PROF_NAME, ULID, EMPLOYMENT_STATUS, TEACHING_STATUS,CREATED_TS,LAST_UPDT_TS)
VALUES ('Wolf, James','jrwolf',1,0,CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);

--POPULATING ALL SCHEDULE TABLE
INSERT INTO ALL_SCHEDULE (SCHEDULE_NAME,DESCRIPTION,CREATED_TS,LAST_UPDT_TS) VALUES ('Fall 2017','Fall 2017 - Draft',CURRENT TIMESTAMP, CURRENT TIMESTAMP);
-- POPULATING TO DO TABLE
INSERT INTO TO_DO (ULID, ALL_SCH_ID, STATUS, CREATED_TS, LAST_UPDT_TS) VALUES ('faculty',1,2,CURRENT TIMESTAMP, CURRENT TIMESTAMP);
-- POPULATING COURSE_PREFERENCE TABLE
INSERT INTO COURSE_PREFERENCE (PROF_ID,COURSE_ID,LAB_NEEDED,COMMENTS,CREATED_TS, LAST_UPDT_TS) VALUES (4,1,1,'Test Comments',CURRENT TIMESTAMP, CURRENT TIMESTAMP);
INSERT INTO COURSE_PREFERENCE (PROF_ID,COURSE_ID,LAB_NEEDED,COMMENTS,CREATED_TS, LAST_UPDT_TS) VALUES (4,2,0,'Test Comments',CURRENT TIMESTAMP, CURRENT TIMESTAMP);
INSERT INTO COURSE_PREFERENCE (PROF_ID,COURSE_ID,LAB_NEEDED,COMMENTS,CREATED_TS, LAST_UPDT_TS) VALUES (4,3,1,'Test Comments',CURRENT TIMESTAMP, CURRENT TIMESTAMP);
INSERT INTO COURSE_PREFERENCE (PROF_ID,COURSE_ID,LAB_NEEDED,COMMENTS,CREATED_TS, LAST_UPDT_TS) VALUES (4,4,0,'Test Comments',CURRENT TIMESTAMP, CURRENT TIMESTAMP);

-- POPULATING DAY_PREFERENCE TABLE
INSERT INTO DAY_PREFERENCE (PROF_ID,DAYS,IS_EVENING,CREATED_TS, LAST_UPDT_TS) VALUES (4,'M,W,F',1,CURRENT TIMESTAMP, CURRENT TIMESTAMP);

--UPDATE TO DO TABLE
UPDATE SFADMIN.TO_DO SET STATUS = 2 WHERE TO_DO_ID=1

--POPULATING COURSE_SECTION TABLE
INSERT INTO COURSE_SECTION (COURSE_ID,ALL_SCH_ID,SECTION_NUMBER,CREATED_TS,LAST_UPDT_TS) VALUES (1,1,'001',CURRENT TIMESTAMP,CURRENT TIMESTAMP);
INSERT INTO COURSE_SECTION (COURSE_ID,ALL_SCH_ID,SECTION_NUMBER,CREATED_TS,LAST_UPDT_TS) VALUES (2,1,'001',CURRENT TIMESTAMP,CURRENT TIMESTAMP);
INSERT INTO COURSE_SECTION (COURSE_ID,ALL_SCH_ID,SECTION_NUMBER,CREATED_TS,LAST_UPDT_TS) VALUES (3,1,'001',CURRENT TIMESTAMP,CURRENT TIMESTAMP);
INSERT INTO COURSE_SECTION (COURSE_ID,ALL_SCH_ID,SECTION_NUMBER,CREATED_TS,LAST_UPDT_TS) VALUES (4,1,'001',CURRENT TIMESTAMP,CURRENT TIMESTAMP);

--POPULATING SCHEDULE TABLE
INSERT INTO SCHEDULE (ALL_SCH_ID,SECTION_ID,PROF_ID,ROOM_ID,DAYS,CLASS_TIME,CREATED_TS,LAST_UPDT_TS) VALUES
(1,1,1,1,'M,W','6:00 PM - 7:15 PM',CURRENT TIMESTAMP,CURRENT TIMESTAMP);
INSERT INTO SCHEDULE (ALL_SCH_ID,SECTION_ID,PROF_ID,ROOM_ID,DAYS,CLASS_TIME,CREATED_TS,LAST_UPDT_TS) VALUES
(1,2,2,2,'T,R','8:00 AM - 9:15 AM',CURRENT TIMESTAMP,CURRENT TIMESTAMP);
INSERT INTO SCHEDULE (ALL_SCH_ID,SECTION_ID,PROF_ID,ROOM_ID,DAYS,CLASS_TIME,CREATED_TS,LAST_UPDT_TS) VALUES
(1,3,3,3,'W,F','3:00 PM - 5:15 PM',CURRENT TIMESTAMP,CURRENT TIMESTAMP);
INSERT INTO SCHEDULE (ALL_SCH_ID,SECTION_ID,PROF_ID,ROOM_ID,DAYS,CLASS_TIME,CREATED_TS,LAST_UPDT_TS) VALUES
(1,4,4,4,'M,W,F','9:00 AM - 10:15 AM',CURRENT TIMESTAMP,CURRENT TIMESTAMP);


SELECT COURSE.COURSE_CODE,COURSE_SECTION.SECTION_NUMBER,PROFESSOR.PROF_NAME,DAYS,CLASS_TIME,ROOM.ROOM_NAME
FROM COURSE_SECTION, COURSE, PROFESSOR, ROOM, SCHEDULE, ALL_SCHEDULE
WHERE COURSE_SECTION.SECTION_ID = SCHEDULE.SECTION_ID
AND COURSE_SECTION.COURSE_ID = COURSE.COURSE_ID
AND COURSE_SECTION.ALL_SCH_ID = SCHEDULE.ALL_SCH_ID
AND PROFESSOR.PROF_ID = SCHEDULE.PROF_ID
AND ROOM.ROOM_ID = SCHEDULE.ROOM_ID
AND SCHEDULE.ALL_SCH_ID = ALL_SCHEDULE.ALL_SCH_ID
AND ALL_SCHEDULE.ALL_SCH_ID =1;


SELECT COURSE_PREFERENCE_ID,COURSE_PREFERENCE_ID,COURSE_PREFERENCE.COURSE_ID,LAB_NEEDED,COMMENTS,COURSE_PREFERENCE.CREATED_TS,COURSE_PREFERENCE.LAST_UPDT_TS
FROM COURSE_PREFERENCE, COURSE
WHERE COURSE_PREFERENCE.COURSE_ID = COURSE.COURSE_ID
AND COURSE_PREFERENCE.PROF_ID = 4;

SELECT COURSE_PREFERENCE_ID, COURSE_PREFERENCE.COURSE_ID,LAB_NEEDED,COMMENTS,
COURSE_PREFERENCE.CREATED_TS,COURSE_PREFERENCE.LAST_UPDT_TS,COURSE.COURSE_CODE
FROM COURSE_PREFERENCE, COURSE
WHERE COURSE_PREFERENCE.COURSE_ID = COURSE.COURSE_ID
AND COURSE_PREFERENCE.PROF_ID=4

SELECT * FROM DAY_PREFERENCE

SELECT * FROM COURSE_PREFERENCE
DELETE FROM COURSE_PREFERENCE WHERE PROF_ID NOT IN (4)
SELECT * FROM TO_DO
UPDATE TO_DO SET STATUS=2




create table COURSE_PREFERENCE
(
	COURSE_PREFERENCE_ID INTEGER CONSTRAINT course_pref_pk primary key GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
	PROF_ID INTEGER,
	COURSE_ID INTEGER,
	LAB_NEEDED INTEGER,
        INTEREST_LEVEL INTEGER,
	COURSE_COMMENTS VARCHAR(3000),
	CREATED_TS TIMESTAMP,
	LAST_UPDT_TS TIMESTAMP
);

create table DAY_PREFERENCE
(
	DAY_PREFERENCE_ID INTEGER CONSTRAINT day_pref_pk primary key GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
	PROF_ID INTEGER,
	DAYS VARCHAR(100),
	PREFERRED_TIME VARCHAR(100),
	FINAL_COMMENTS VARCHAR(3000),
	OTHER_INTERESTS VARCHAR(3000),
	CREATED_TS TIMESTAMP,
	LAST_UPDT_TS TIMESTAMP
);


SELECT COURSE_PREFERENCE_ID,COURSE_PREFERENCE.PROF_ID, COURSE_PREFERENCE.COURSE_ID,LAB_NEEDED,INTEREST_LEVEL, COURSE_COMMENTS, 
COURSE_PREFERENCE.CREATED_TS,COURSE_PREFERENCE.LAST_UPDT_TS,COURSE.COURSE_CODE,COURSE.COURSE_NAME 
FROM COURSE_PREFERENCE, COURSE 
WHERE COURSE_PREFERENCE.COURSE_ID = COURSE.COURSE_ID 
AND COURSE_PREFERENCE.PROF_ID = 


SELECT DAY_PREFERENCE_ID, PROF_ID, DAYS, PREFERRED_TIME, FINAL_COMMENTS, OTHER_INTERESTS, CREATED_TS, LAST_UPDT_TS FROM DAY_PREFERENCE WHERE PROF_ID

-- POPULATING COURSE_PREFERENCE TABLE
INSERT INTO COURSE_PREFERENCE (PROF_ID,COURSE_ID,LAB_NEEDED,INTEREST_LEVEL,COURSE_COMMENTS,CREATED_TS, LAST_UPDT_TS) VALUES (4,1,1,1,'Test Comments',CURRENT TIMESTAMP, CURRENT TIMESTAMP);
INSERT INTO COURSE_PREFERENCE (PROF_ID,COURSE_ID,LAB_NEEDED,INTEREST_LEVEL,COURSE_COMMENTS,CREATED_TS, LAST_UPDT_TS) VALUES (4,2,0,2,'Test Comments',CURRENT TIMESTAMP, CURRENT TIMESTAMP);
INSERT INTO COURSE_PREFERENCE (PROF_ID,COURSE_ID,LAB_NEEDED,INTEREST_LEVEL,COURSE_COMMENTS,CREATED_TS, LAST_UPDT_TS) VALUES (4,3,1,3,'Test Comments',CURRENT TIMESTAMP, CURRENT TIMESTAMP);
INSERT INTO COURSE_PREFERENCE (PROF_ID,COURSE_ID,LAB_NEEDED,INTEREST_LEVEL,COURSE_COMMENTS,CREATED_TS, LAST_UPDT_TS) VALUES (4,4,0,4,'Test Comments',CURRENT TIMESTAMP, CURRENT TIMESTAMP);

-- POPULATING DAY_PREFERENCE TABLE


SELECT * FROM TO_DO
